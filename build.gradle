plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	// レート制限用ライブラリ（一時的にコメントアウト - メイン機能優先）
	// implementation 'com.bucket4j:bucket4j-core:8.10.1'
	
	// モダンテスト用ライブラリ
	testImplementation 'org.testcontainers:testcontainers:1.19.0'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
	testImplementation 'org.testcontainers:postgresql:1.19.0'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
	testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.0'
	
	// REST API テスト用
	testImplementation 'io.rest-assured:rest-assured:5.3.2'
	testImplementation 'io.rest-assured:json-path:5.3.2'
	testImplementation 'io.rest-assured:spring-mock-mvc:5.3.2'
	
	// テストデータ生成用
	testImplementation 'net.datafaker:datafaker:2.0.2'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

// JaCoCo設定
jacoco {
	toolVersion = "0.8.11"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.60 // 60%のカバレッジを要求
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification
